fnc print(a : str, ...) : void;

trait Add {
	fnc sum(const a : Self, const b : Self) : Self;
}

trait Length {
	fnc length(const self : Self) : f32;
}

trait Display {
	fnc print(self: ptr<*Self>) : void;
}

struct Vec2 {
	x : f32,
	y : f32,
}

impl Add for Vec2 {
	fnc sum(const a: Self, const b: Self) : Self {
		return : Self = {
			x = a.x + b.x,
			y = a.y + b.y,
		};

		ret return;
	}
}


impl Display for Vec2 {
	fnc print(self: ptr<*Self>) : void {
		print("x : %d, y = %d", self.x, self.y);
	}
}

impl Length for Vec2 {
	fnc length(self : Self) : f32 {
		return : f32 = self.x * self.x + self.y * self.y;
		ret return;
	}
}

fnc add_len(a : trait<Length + Display>, b : trait<Length + Display>) : f32 {
	a.print();
	b.print();
	return : f32 = a.length() + b.length();
	print("Length of a + b = %f", return);
	ret return;
}

fnc main() : i32 {
	const pta : Vec2 = {
		x = 20.0,
		y = 40.0,
	};

	const ptb : Vec2 = {
		x = 50.0,
		y = 60.0,
	};

	ptc : Vec2;
	len : f32 = add_len(pta, ptb);
	ptc = pta + ptb;
	print("Sum of a + b = ");
	ptc.print();
	print("Sum of a + b length = %f", len);
	ret 0;
}
